apiVersion: batch/v1
kind: Job
metadata:
  name: kafka-setup-job
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 10
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: kafka-setup
        image: bitnami/kafka:2.8.1
        command: ["/bin/bash", "-c"]
        args:
        - |
          #!/bin/bash
          KAFKA_BIN="/opt/bitnami/kafka/bin"
          BROKER="kafka:9092"
          
          echo "Waiting for Kafka to be ready..."
          MAX_RETRIES=30
          RETRY_INTERVAL=10
          
          for i in $(seq 1 $MAX_RETRIES); do
            if $KAFKA_BIN/kafka-topics.sh --list --bootstrap-server $BROKER &>/dev/null; then
              echo "Kafka is ready. Creating topics..."
              break
            fi
            
            if [ $i -eq $MAX_RETRIES ]; then
              echo "Timed out waiting for Kafka to be ready."
              exit 1
            fi
            
            echo "Waiting for Kafka to be ready... Attempt $i/$MAX_RETRIES"
            sleep $RETRY_INTERVAL
          done
          
          # Create topic if it doesn't exist
          if ! $KAFKA_BIN/kafka-topics.sh --list --bootstrap-server $BROKER | grep -q "^bookings$"; then
            echo "Creating bookings topic..."
            $KAFKA_BIN/kafka-topics.sh --create --topic bookings --bootstrap-server $BROKER --partitions 3 --replication-factor 1
          else
            echo "Topic bookings already exists."
          fi
          
          # Create consumer group
          echo "Setting up consumer group..."
          $KAFKA_BIN/kafka-consumer-groups.sh --bootstrap-server $BROKER --create --group booking-processor-group --topic bookings
          
          echo "Kafka setup completed successfully."
